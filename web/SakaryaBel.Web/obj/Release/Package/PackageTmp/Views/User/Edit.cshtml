@model SakaryaBel.Web.Models.UserEdit

@{
    ViewBag.Title = "Kullanıcı Düzenleme";
}

<link href="~/Content/css/select2.css" type="text/css" rel="stylesheet" />
<style>
    body:before {
        background-color: #f2f2f2;
    }

    .select2-container {
        width: 100%;
    }
</style>


<div class="maincontent">
    <div class="maincontentinner">
        <div class="row">
            @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "stdform stdform2", id = "frmUserNew" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(m => m.Id)

                <div class="col-md-4 profile-left">
                    <div class="widgetbox profile-photo">
                        <div class="headtitle">
                            <div class="btn-group">
                                <button data-toggle="dropdown" class="btn dropdown-toggle">Action <span class="caret"></span></button>
                                <ul class="dropdown-menu">
                                    <li><a href="#">Change Photo</a></li>
                                    <li><a href="#">Remove Photo</a></li>
                                </ul>
                            </div>
                            <h4 class="widgettitle" style="margin-bottom: -5px">Profil Resmi</h4>
                        </div>
                        <div class="widgetcontent">
                            <div class="profilethumb">
                                <img height="180" width="120" src="@Model.ProfileImage" alt="" class="img-polaroid">
                            </div><!--profilethumb-->
                        </div>
                    </div>
                    <div>

                        <div class="widget-box transparent">
                            <div class="widget-body">
                                <div class="widget-main no-padding">
                                    <div class="form-horizontal">
                                        <span class="btn block btn-success fileinput-button">
                                            <i class="glyphicon glyphicon-plus"></i>
                                            <span>Dosya Seç</span>
                                            <input id="fileupload" type="file" name="files">
                                        </span>
                                        <br />
                                        <span id="fileContainer"></span>
                                        <br />
                                        <div class="progress">
                                            <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0;">
                                                <span class="sr-only">0% complete</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
                <!--col-md-4-->
                <div class="col-md-8">


                    <div class="widgetbox personal-information">
                        <h4 class="widgettitle" style="margin-bottom: -5px">Kullanıcı Bilgileri</h4>
                        <div class="widgetcontent form-horizontal">

                            <p>
                                <label><span style="color: red; font-size: 20px">&nbsp;*</span>Kullanıcı Adı</label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.Username, new { @placeholder = "Kullanıcı Adı", @class = "input-xxlarge .span5", @id = "userName" })
                                    @Html.ValidationMessageFor(m => m.Username, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                </span>
                            </p>
                            <p>
                                <label><span style="color: red; font-size: 20px">&nbsp;*</span>Ad</label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.Name, new { @placeholder = "Ad", @class = "input-xxlarge .span5", @id = "name" })
                                    @Html.ValidationMessageFor(m => m.Name, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                </span>
                            </p>
                            <p>
                                <label><span style="color: red; font-size: 20px">&nbsp;*</span>Soyad</label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.Surname, new { @placeholder = "Soyisim", @class = "input-xxlarge .span5", @id = "surname" })
                                    @Html.ValidationMessageFor(m => m.Surname, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                </span>
                            </p>
                            <p>
                                <label><span style="color: red; font-size: 20px">&nbsp;*</span>Email</label>
                                <span class="field">
                                    @Html.TextBoxFor(m => m.Email, new { @placeholder = "Email", @class = "input-xxlarge .span5", @id = "email" })
                                    @Html.ValidationMessageFor(m => m.Email, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                </span>
                            </p>

                            <p>
                                <label><span style="color: red; font-size: 20px">&nbsp;*</span>Kullanıcı Tipi</label>
                                <span class="field">
                                    <select id="ddlUserType" name="ddlUserType">
                                        <option value="-1">Diğer</option>
                                        @foreach (var k in Enum.GetValues(typeof(SakaryaBel.Web.Enums.UserType)))
                                        {
                                            if (((SakaryaBel.Web.Enums.UserType)k == SakaryaBel.Web.Enums.UserType.SuperCheif))
                                            {
                                                if (User.IsInRole("SuperCheif"))
                                                {
                                                    if (Model.UserType == (SakaryaBel.Web.Enums.UserType)k)
                                                    {
                                                        <option value="@(Convert.ToInt32((SakaryaBel.Web.Enums.UserType) k))" selected="selected">@k</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@(Convert.ToInt32((SakaryaBel.Web.Enums.UserType) k))">@k</option>
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                if (Model.UserType == (SakaryaBel.Web.Enums.UserType)k)
                                                {
                                                    <option value="@(Convert.ToInt32((SakaryaBel.Web.Enums.UserType) k))" selected="selected">@k</option>
                                                }
                                                else
                                                {
                                                    <option value="@(Convert.ToInt32((SakaryaBel.Web.Enums.UserType) k))">@k</option>
                                                }
                                            }
                                        }
                                    </select>
                                </span>
                            </p>

                            <p>
                                <label><span style="color: red; font-size: 20px">&nbsp;*</span>Şef</label>
                                <span class="field">
                                    @Html.TextBox("role", "", new { id = "role", @class = "span6" })
                                </span>
                            </p>

                        </div>
                    </div>

                    <p class="pull-right">
                        <button type="submit" id="btnCreate" class="btn btn-primary">Güncelle</button> &nbsp;
                        <a class="createEditStudent btn btn-danger btn-large" data-fancybox-type="iframe" href="@Url.Action("ChangePassword", "User", new { id = Model.Id })">Şifre Değiştir</a>
                        <a href="/User/Index" class="btn btn-default">İptal</a>
                    </p>
                </div>
                <!--col-md-8-->
            }
        </div><!--row-->

    </div><!--maincontentinner-->
</div>


@section Scripts
{
    @*<link href="~/Content/themes/base/datepicker.css" rel="stylesheet" />*@

    <script src="~/Scripts/jQuery.FileUpload/jquery.fileupload.js"></script>
    <script src="~/Scripts/jQuery.FileUpload/jquery.fileupload-ui.js"></script>
    <script src="~/Scripts/ui/document_edit.js"></script>
    <script src="~/Scripts/select2.js"></script>

    @Scripts.Render("~/bundles/knockout")

    <script>
        var activitiesByType = [];
        $(document).ready(function () {
            //user_new.init();

            var pageSize = 10000;
            $('#role').select2(
            {
                placeholder: 'Lütfen Rol Seçiniz',
                minimumInputLength: 0,
                allowClear: true,
                ajax: {
                    quietMillis: 150,
                    url: '/User/GetCheif/',
                    dataType: 'jsonp',
                    type: "POST",
                    data: function (term, page) {
                        return {
                            searchTerm: term,
                            pageSize: pageSize,
                            pageNum: page
                        };
                    },
                    results: function (data, page) {
                        var more = (page * pageSize) < data.Total;
                        return { results: data.Results, more: more };
                    }
                }
            }).on('change', function (e) {
                console.log("change");
            }).on('select', function (e) {
                console.log("select");
            }).select2("data", { id: '@Model.CheifId', text: '@Model.CheifName' });;

            $('.createEditStudent').fancybox({
                fitToView: false,
                width: '50%',
                height: '58%',
                autoSize: false,
                closeClick: false,
                openEffect: 'none',
                closeEffect: 'none',
                padding: 0,
                closeBtn: false,
                'afterClose': function () {
                    //window.location.reload();
                },
                helpers: {
                    overlay: {
                        css: {
                        }
                    }
                }
            });
        });
    </script>
}